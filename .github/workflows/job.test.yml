# TODO: remove this line which appeases integrity.py
#
#   jupyterlab >=4.1.0,<5.0.0a0
#
name: CI

on:
  push:
    branches:
      - main
      - 3.x
      - 4.x
  pull_request:
    branches:
      - main
      - 3.x
      - 4.x
  workflow_dispatch:

# TODO: might need to tweak `group`
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash -l {0}

env:
  # pixi
  PIXI_COLOR: always
  # python
  PYTHONUNBUFFERED: 1
  # julia
  JULIA_NUM_THREADS: 2
  # this repo
  PIXI_VERSION: 0.41.4 # keep in sync with `pixi.toml#/$schema`
  CACHE_EPOCH: 5 # increase this value to reset all caches
  ATEST_PROCESSES: 2 # run more atests at once
  ATEST_RETRIES: 3 # retry atest more times
  PIXI_RUN: |- # add `-v` to see more inputs/outputs
    pixi run --no-install --locked

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: prefix-dev/setup-pixi@v0.8.3
        with:
          pixi-version: v${{ env.PIXI_VERSION }}
          cache: true
          environments: build
      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: |
            !node_modules/.cache/
            node_modules/
          key: |
            ${{ env.CACHE_EPOCH }}-node-build-${{ hashFiles('pixi.lock', 'yarn.lock') }}
      - run: ${{ env.PIXI_RUN }} setup-js && touch node_modules/.ci-skip-yarn
      - run: ${{ env.PIXI_RUN }} build
      - run: ${{ env.PIXI_RUN }} dist
      - uses: actions/upload-artifact@v4
        with:
          name: jplsp-${{ github.run_number }}-dist
          path: |
            .pixi/task-cache-v0/
            dist/

  lint:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: prefix-dev/setup-pixi@v0.8.3
        with:
          pixi-version: v${{ env.PIXI_VERSION }}
          cache: true
          environments: lint
      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: |
            !node_modules/.cache/
            node_modules/
          key: |
            ${{ env.CACHE_EPOCH }}-node-build-${{ hashFiles('pixi.lock', 'yarn.lock') }}
      - run: ${{ env.PIXI_RUN }} fix
      - run: ${{ env.PIXI_RUN }} lint
      - if: always()
        run: ${{ env.PIXI_RUN }} ci-summary-diff >> "${GITHUB_STEP_SUMMARY}"

  docs:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: prefix-dev/setup-pixi@v0.8.3
        with:
          pixi-version: v${{ env.PIXI_VERSION }}
          cache: true
          environments: docs
      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: |
            !node_modules/.cache/
            node_modules/
          key: |
            ${{ env.CACHE_EPOCH }}-node-build-${{ hashFiles('pixi.lock', 'yarn.lock') }}
      - run: ${{ env.PIXI_RUN }} docs
      - uses: actions/upload-artifact@v4
        with:
          name: jplsp-${{ github.run_number }}-docs
          path: |
            build/docs

  test:
    needs: [build]
    runs-on: ${{ matrix.os }}-${{ matrix.vm }}
    strategy:
      fail-fast: false
      matrix:
        test: [itest, atest]
        epoch: [min, now]
        os: [macos, ubuntu, windows]
        vm: [latest]
        exclude:
          - { os: macos, epoch: min }
        include:
          - { test: atest, epoch: pre, os: ubuntu, vm: latest }
          - { test: itest, epoch: min, os: macos, vm: 13 }
          - { test: atest, epoch: min, os: macos, vm: 13 }
    steps:
      - uses: actions/checkout@v4
      - uses: prefix-dev/setup-pixi@v0.8.3
        with:
          pixi-version: v${{ env.PIXI_VERSION }}
          cache: true
          environments: ${{ matrix.test }}-${{ matrix.epoch }}
      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: |
            !node_modules/.cache/
            node_modules/
          key: |
            ${{ env.CACHE_EPOCH }}-node-build-${{ hashFiles('pixi.lock', 'yarn.lock') }}
      - uses: actions/download-artifact@v4
        with:
          name: jplsp-${{ github.run_number }}-dist
      - run: ${{ env.PIXI_RUN }} --skip-deps ${{ matrix.test }}-${{ matrix.epoch }}-uv
      - run: ${{ env.PIXI_RUN }} --skip-deps ${{ matrix.test }}-${{ matrix.epoch }}
      - name: Publish browser test output
        uses: actions/upload-artifact@v4
        with:
          name: jplsp-${{ github.run_number }}-${{ matrix.test }}-${{ matrix.epoch }}-${{ matrix.os }}
          path: ./build/reports
        if: always()
